-- MySQL Script generated by MySQL Workbench
-- Sat Mar  8 05:59:13 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema toko-buku-api
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `toko-buku-api` ;

-- -----------------------------------------------------
-- Schema toko-buku-api
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `toko-buku-api` DEFAULT CHARACTER SET utf8 ;
USE `toko-buku-api` ;

-- -----------------------------------------------------
-- Table `toko-buku-api`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`country` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`country` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `iso3` VARCHAR(3) NOT NULL,
  `country` VARCHAR(50) NOT NULL,
  `nice_country` VARCHAR(50) NOT NULL,
  `currency` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `toko-buku-api`.`author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`author` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`author` (
  `id` MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `country_id` TINYINT UNSIGNED NOT NULL,
  `author` VARCHAR(50) NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_author_country`
    FOREIGN KEY (`country_id`)
    REFERENCES `toko-buku-api`.`country` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `toko-buku-api`.`type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`type` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`type` (
  `id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `type` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `toko-buku-api`.`book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`book` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`book` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` TIMESTAMP NULL,
  `author_id` MEDIUMINT UNSIGNED NOT NULL,
  `type_id` SMALLINT UNSIGNED NULL,
  `title` VARCHAR(50) NOT NULL,
  `sku` VARCHAR(30) NOT NULL,
  `price` DECIMAL(6,2) NOT NULL DEFAULT 0.0,
  `stock` MEDIUMINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `author_id`
    FOREIGN KEY (`author_id`)
    REFERENCES `toko-buku-api`.`author` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `type_id`
    FOREIGN KEY (`type_id`)
    REFERENCES `toko-buku-api`.`type` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB; # <-- ';'
# DEFAULT CHARACTER SET = DEFAULT;

# CREATE UNIQUE INDEX `sku_UNIQUE` ON `toko-buku-api`.`book` (`sku` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `toko-buku-api`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`order` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`order` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` TIMESTAMP NULL,
  `x-idempotency-key` VARCHAR(38) NOT NULL COMMENT 'Idempotency  http POST.\n\nHTTP Header:\nx-idempotency-key=….',
  `status` ENUM("processed", "received") NOT NULL DEFAULT 'processed',
  `count` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Min.: 1 pc.\nMax.: 15 pcs.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idempotency_key_UNIQUE` ON `toko-buku-api`.`order` (`x-idempotency-key` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `toko-buku-api`.`order_has_book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `toko-buku-api`.`order_has_book` ;

CREATE TABLE IF NOT EXISTS `toko-buku-api`.`order_has_book` (
  `order_id` BIGINT UNSIGNED NOT NULL,
  `book_id` INT UNSIGNED NOT NULL,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`order_id`, `book_id`),
  CONSTRAINT `fk_order_has_book_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `toko-buku-api`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_has_book_book1`
    FOREIGN KEY (`book_id`)
    REFERENCES `toko-buku-api`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `toko-buku-api`.`country`
-- -----------------------------------------------------
START TRANSACTION;
USE `toko-buku-api`;
INSERT INTO `toko-buku-api`.`country` (`id`, `updated_at`, `iso3`, `country`, `nice_country`, `currency`) VALUES (100, NULL, 'IDN', 'INDONESIA', 'Indonesia', 'Rp');
INSERT INTO `toko-buku-api`.`country` (`id`, `updated_at`, `iso3`, `country`, `nice_country`, `currency`) VALUES (225, NULL, 'GBR', 'UNITED KINGDOM', 'United Kingdom', '£');
INSERT INTO `toko-buku-api`.`country` (`id`, `updated_at`, `iso3`, `country`, `nice_country`, `currency`) VALUES (226, NULL, 'USA', 'UNITED STATES', 'United States', '$');

COMMIT;


-- -----------------------------------------------------
-- Data for table `toko-buku-api`.`author`
-- -----------------------------------------------------
START TRANSACTION;
USE `toko-buku-api`;
INSERT INTO `toko-buku-api`.`author` (`id`, `updated_at`, `country_id`, `author`, `city`) VALUES (1, '2024-12-02 17:22:47', 100, 'Buya Hamka', 'Sumatera Barat, Indonesia');
INSERT INTO `toko-buku-api`.`author` (`id`, `updated_at`, `country_id`, `author`, `city`) VALUES (2, '2024-12-02 17:22:47', 100, 'Pramoedya Ananta Toer', 'Jawa Timur, Indonesia');

COMMIT;


-- -----------------------------------------------------
-- Data for table `toko-buku-api`.`type`
-- -----------------------------------------------------
START TRANSACTION;
USE `toko-buku-api`;
INSERT INTO `toko-buku-api`.`type` (`id`, `updated_at`, `type`) VALUES (1, '2024-12-02 17:18:24', 'novel');

COMMIT;


-- -----------------------------------------------------
-- Data for table `toko-buku-api`.`book`
-- -----------------------------------------------------
START TRANSACTION;
USE `toko-buku-api`;
INSERT INTO `toko-buku-api`.`book` (`id`, `created_at`, `updated_at`, `deleted_at`, `author_id`, `type_id`, `title`, `sku`, `price`, `stock`) VALUES (1, '2024-12-02 19:01:00', NULL, NULL, 1, 1, 'Tenggelamnya Kapal van der Wijck', 'kapal-van-der_1', 6.45, 100);
INSERT INTO `toko-buku-api`.`book` (`id`, `created_at`, `updated_at`, `deleted_at`, `author_id`, `type_id`, `title`, `sku`, `price`, `stock`) VALUES (2, '2024-12-02 19:02:00', NULL, NULL, 2, 1, 'Bumi Manusia', 'bumi-manusia_1', 8.20, 100);

COMMIT;

